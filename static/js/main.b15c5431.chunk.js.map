{"version":3,"sources":["components/format-calculation/layaut-format.config.ts","components/format-calculation/format-select/index.tsx","components/format-calculation/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LAYOUT_FORMAT_CONFIG","format","coefficient","FormatSelect","setSelectedFormats","item","useState","pageData","setPageData","useEffect","quantity","title","className","Dropdown","Toggle","variant","id","Menu","map","Item","href","onClick","formatItem","type","onChange","e","Number","target","value","disabled","pattern","FormatCalculation","pagesData","setPagesData","updateSelectedFormats","updatedPagesData","console","log","total","reduce","result","lastItem","length","isLastItemFiled","Button","toFixed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b15c5431.chunk.js","sourcesContent":["import { PageData } from \"./interface\";\n\nexport const LAYOUT_FORMAT_CONFIG: PageData[] = [\n  {\n    format: 'a1',\n    coefficient: 1,\n  },\n  {\n    format: 'a2',\n    coefficient: 0.5\n  },\n  {\n    format: 'a3',\n    coefficient: 0.25\n  },\n  {\n    format: 'a4',\n    coefficient: 0.125\n  },\n  {\n    format: 'a4x3',\n    coefficient: 0.325\n  },\n  {\n    format: 'a4x4',\n    coefficient: 0.5\n  },\n  {\n    format: 'a4x5',\n    coefficient: 0.625\n  },\n  {\n    format: 'a3x3',\n    coefficient: 0.75\n  },\n  {\n    format: 'a3x4',\n    coefficient: 1\n  },\n  {\n    format: 'a2x3',\n    coefficient: 1.5\n  },\n  {\n    format: 'a2x34',\n    coefficient: 2\n  }\n]\n","import React, { useEffect, useState } from 'react';\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\nimport { Col } from 'react-bootstrap';\n\nimport { LAYOUT_FORMAT_CONFIG } from '../layaut-format.config';\nimport { PageData } from '../interface';\n\nimport './style.scss';\n\nexport default function FormatSelect({\n                                       setSelectedFormats,\n                                       item\n                                     }: { setSelectedFormats: (pageData: PageData) => void, item: PageData }) {\n  const [pageData, setPageData] = useState<PageData>(item);\n\n  useEffect(() => {\n    if (pageData.format && pageData.quantity) {\n      setSelectedFormats(pageData)\n    }\n  }, [pageData]);\n\n  const onFormatChangeHandler = (formatItem: PageData) => {\n    setPageData({...pageData, ...formatItem})\n  }\n\n  const onQuantityChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPageData({...pageData, quantity: Number(e?.target?.value)})\n  }\n\n  const title = pageData.format || 'Select format';\n\n  return (\n    <div className=\"item-container\">\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          {title}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {LAYOUT_FORMAT_CONFIG.map((item) => (\n            <Dropdown.Item key={`${item.id}-${item.format}`} href=\"#/action-1\" onClick={() => {\n              onFormatChangeHandler(item)\n            }}>{item.format}</Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <input\n        className=\"quantity-value\"\n        type=\"number\"\n        onChange={onQuantityChangeHandler}\n        disabled={!pageData.format}\n        pattern=\"\\d*\"/>\n    </div>\n\n  )\n}\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport FormatSelect from './format-select';\nimport { PageData } from './interface';\n\nimport './style.scss';\n\nexport default function FormatCalculation() {\n  const [pagesData, setPagesData] = useState<PageData[]>([{\n    id: 1,\n    format: '',\n    quantity: 0,\n    coefficient: 0,\n  }])\n  const updateSelectedFormats = (pageData: PageData): void => {\n    const updatedPagesData = pagesData.map((item) => {\n      console.log(pagesData);\n      if (pageData.id === item.id) {\n        return pageData\n      }\n\n      return item;\n    });\n\n    setPagesData(updatedPagesData)\n  };\n\n  const total = pagesData.reduce((result, item) => (\n    result += item.quantity ? item?.quantity * item.coefficient : 0\n  ), 0);\n\n  const lastItem = pagesData[pagesData.length -1];\n\n  const isLastItemFiled = lastItem.format && lastItem.quantity;\n\n  const addPageData = () => {\n    setPagesData([...pagesData, {\n      id: pagesData.length + 1,\n      format: '',\n      quantity: 0,\n      coefficient: 0,\n    }])\n  }\n\n  return (\n    <div className=\"page-container\">\n        <div>\n          {\n            pagesData.map((item) => (\n              <FormatSelect key={item.id} item={item} setSelectedFormats={updateSelectedFormats}/>\n            ))\n          }\n        </div>\n      <Button\n        variant=\"primary\"\n        className=\"add-item\"\n        onClick={addPageData}\n        disabled={!isLastItemFiled}\n      >Add</Button>\n      <div className=\"total\">{total.toFixed(2)}</div>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport './App.css';\nimport FormatCalculation from './components/format-calculation';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormatCalculation></FormatCalculation>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}